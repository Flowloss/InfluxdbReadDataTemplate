@model IEnumerable<InfluxDBTest.Models.CounterModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Data Chart (Dark Mode)</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
            background-color: #2c2c2c;
            color: #f0f0f0;
        }

        h1 {
            color: #ffffff;
        }

        #myChart {
            max-width: 1000px;
            max-height: 600px;
            margin: 0 auto;
        }

        .chart-container {
            padding: 20px;
            background-color: #3c3c3c;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <h1>PLC Data from InfluxDB</h1>
    <div class="chart-container">
        <canvas id="myChart" width="1000" height="600"></canvas>
    </div>

    <script>
        // Initial data passed from C# to JavaScript
        let labels = @Html.Raw(Json.Serialize(Model.Select(m => m.Time)));
        let data = @Html.Raw(Json.Serialize(Model.Select(m => m.Counter)));

        
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels, 
                datasets: [{
                    label: 'Counter',
                    data: data, 
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 1,
                    pointRadius: 1,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#f0f0f0'
                        }
                    },
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#f0f0f0'
                        }
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            color: '#f0f0f0'
                        }
                    }
                }
            }
        });

        // Function to fetch new data from the server
        function updateChart() {
            $.ajax({
                url: '/Home/GetLatestData',
                method: 'GET',
                success: function (response) {
                    const newLabels = response.map(item => item.time);
                    const newData = response.map(item => item.counter);

                    // Update the chart data
                    myChart.data.labels = newLabels;
                    myChart.data.datasets[0].data = newData;
                    myChart.update(); 
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', status, error);
                }
            });
        }

        // Updates graph every x seconds
        setInterval(updateChart, 1000);
    </script>
</body>
</html>